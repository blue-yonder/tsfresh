## Travis Build file for tsfresh

language: python
os: linux
notifications:
   slack: tsfresh:uIzPVnlBQs32xE5jbq34f0Cq

# We want the pip folder to be cached to speed up installation
cache:
  directories:
    - $HOME/.cache/pip

# Installation of packages
install:
  # Begin by updating pip to its newest version
  - pip install --upgrade pip wheel setuptools
  # Then install the requirements as they are defined
  - pip install -r requirements.txt -r test-requirements.txt
  # Then install the package
  - pip install .
  # Now downgrade packages if required by environment variables
  - "[ \"$NUMPY\" = latest ] && pip install --upgrade numpy || [ -z \"$NUMPY\" ] || pip install numpy==$NUMPY"
  - "[ \"$PANDAS\" = latest ] && pip install --upgrade pandas || [ -z \"$PANDAS\" ] || pip install pandas==$PANDAS"
  - "[ \"$SCIKITLEARN\" = latest ] && pip install --upgrade scikit-learn || [ -z \"$SCIKITLEARN\" ] || pip install scikit-learn==$SCIKITLEARN"
  - "[ \"$STATSMODELS\" = latest ] && pip install --upgrade statsmodels || [ -z \"$STATSMODELS\" ] || pip install statsmodels==$STATSMODELS"
  - "[ \"$DASK\" = latest ] && pip install --upgrade dask || [ -z \"$DASK\" ] || pip install dask==$DASK"
  - "[ \"$DISTRIBUTED\" = latest ] && pip install --upgrade distributed || [ -z \"$DISTRIBUTED\" ] || pip install distributed==$DISTRIBUTED"
  # need to downgrade tornado manually
  - "[ \"$SCIPY\" = latest ] || [ -z \"$SCIPY\" ] || pip install tornado==4.5.3"
  - "[ \"$SCIPY\" = latest ] && pip install --upgrade scipy || [ -z \"$SCIPY\" ] || pip install scipy==$SCIPY"
  # Print out the pip versions for debugging
  - pip list
  # Only use two cores
  - sed -i -e 's/-n auto/-n 2/g' setup.cfg
  # we want to run coverage only inside a single job
  - sed -e '/^\s*--cov tsfresh/d' setup.cfg > setup-nocov.cfg

# all jobs call pytest with setup-nocov.cfg to not run coverage test - except one which overrides this variable
env:
  global:
    - PYTEST_ADDOPTS="-c setup-nocov.cfg"

# The script to call on tests
script: "if [ $TRAVIS_PULL_REQUEST = false ] && ! [ $TRAVIS_BRANCH = main ]; then pytest tests/units; else pytest tests; fi"

# Now define the different stages
jobs:
  include:
    # First stage: tests
    - stage: Run tests
      env: NUMPY="latest" PANDAS="latest" SCIKITLEARN="latest" DASK="latest" DISTRIBUTED="latest" SCIPY="latest" STATSMODELS="latest" PYTEST_ADDOPTS="-c setup.cfg"
      python: 3.7
      # We only run coverage tests here (we also set a different setup.cfg script here)
      after_success:
        - coveralls

    # Turned off because we do not support 3.8 already
    #  - env: NUMPY="latest" PANDAS="latest" SCIKITLEARN="latest" DASK="latest" DISTRIBUTED="latest" SCIPY="latest" STATSMODELS="latest"
    #  python: 3.8

    - env: NUMPY="latest" PANDAS="latest" SCIKITLEARN="latest" DASK="latest" DISTRIBUTED="latest" SCIPY="latest" STATSMODELS="latest"
      python: 3.6

    - env: NUMPY="latest" PANDAS="latest" SCIKITLEARN="latest" DASK="latest" DISTRIBUTED="latest" SCIPY="latest" STATSMODELS="latest"
      # newest pandas (>= 0.25) requires python >= 3.5.3
      python: 3.5.3

    - env: NUMPY="1.15.1" PANDAS="0.23.2" SCIKITLEARN="0.19.2" DASK="0.16.1" DISTRIBUTED="1.18.3" SCIPY="1.2.0" STATSMODELS="0.9.0"
      # python 3.7 requires pandas >= 0.23.2
      python: 3.7

    - env: NUMPY="1.15.1" PANDAS="0.20.3" SCIKITLEARN="0.19.0" DASK="0.15.2" DISTRIBUTED="1.18.3" SCIPY="1.2.0" STATSMODELS="0.9.0"
      python: 3.6

    - env: NUMPY="1.15.1" PANDAS="0.20.3" SCIKITLEARN="0.19.0" DASK="0.15.2" DISTRIBUTED="1.18.3" SCIPY="1.2.0" STATSMODELS="0.9.0"
      python: 3.5.3


    # Second stage: deploy
    - stage: Deploy
      python: 3.7
      script: skip
      deploy:
        provider: pypi
        user: MaxChrist
        password:
          secure: Jh0Z69Mh+esOpegXyXoecFOkpMhaQaiJbQVEvVvQ2K1rCmCE20a19/TGfPUrynpqOYXZvvb5Ok6CtlzAi9J5huA3MRSf4iYPsUe8i7n0FK4JU5BP7VqM3/7cQZMdD5SeYFV3e3JURDcKYfoG7N+DNb+LfluYK5MBkRLhdEVRqSeHocPY4QRzzhJi1ljX99ThdRPrsQqYaD3tpZxJhbJDgHLtvMr39+407uQSDnubvFz3iu90DZiN2fIP5bEN6PDuaGXNZMA1p40DjSkGc7epg0U4vHn6CSya1nXlqjXUqXYJY5Ha2kbMAN7hfmU+gId09+FSHQRuanKJkRqSBksVgATCAeSAiqAe3EPAsG75ewhXDeusQZMzRy7DxQzjOJG9oIyWMVmZFlIoNlpg2eifN9uUc7FfyGHiVfWwUDslszpc/81hQViMPP0NoMAop4zcWR3ChCMnHMycPQEmWuV65WfL7yN6SuTokxSmepubPtFs+4UIlI0rgZWCHVIgGZqI8LFn958pLtpQ+32Ew8HGU3IiOfao9HbGreQ2Lgqo2L2EyNDWiHfJ3oZ1+6BP/1GqI6j7x7oPdwoE1jvY4CSC7iMAiieZNnrvywvmJpZB69CGefxQJzWcm+yD03QwNBFFaabCbKwbn+q3eUOUrPRuvTkhVLRWDxQNH/zaZyuZQ+Q=
        distributions: "sdist bdist_wheel"
        on:
          tags: true


  # Some dependencies are not yet ready for Python 3.8
  allow_failures:
    - python: 3.8
  # Make sure to not wait for Python 3.8
  fast_finish: true
